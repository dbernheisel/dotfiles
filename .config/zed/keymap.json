// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  // {
  //   "context": "Editor && mode==full && vim_mode == visual",
  //   "bindings": {
  //     ";": "vim::so",
  //     ":": "go_to_line::Toggle"
  //   }
  // },
  {
    "context": "Editor && mode==full && (vim_mode == normal || vim_mode == visual)",
    "bindings": {
      "ctrl-n": "vim::SelectNext"
    }
  },
  {
    "context": "Editor && mode==full && vim_mode == normal",
    "bindings": {
      ";": "command_palette::Toggle",
      ":": "go_to_line::Toggle",
      "K": "editor::Hover",
      "shift-left": "pane::ActivatePreviousItem",
      "shift-right": "pane::ActivateNextItem",
      "ctrl-w k": "vim::ResizePaneUp",
      "ctrl-w j": "vim::ResizePaneDown",
      "ctrl-w h": "vim::ResizePaneLeft",
      "ctrl-w l": "vim::ResizePaneRight",
      "ctrl-g": "workspace::CopyPath",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-p": "file_finder::Toggle",
      "space b": "project_panel::ToggleFocus",
      "space f": "pane::DeploySearch",
      "space n": "notification_panel::ToggleFocus",
      "space t": "terminal_panel::ToggleFocus",
      "space x": "diagnostics::Deploy",
      "space a c": "agent::ToggleFocus",
      "space g s": "git_panel::ToggleFocus",
      "space g c": "git::ExpandCommitEditor",
      "space g f": "git::Pull",
      "space g c o": "git::Switch",
      "space space": "pane::AlternateFile"
    }
  },
  {
    "context": "Editor && mode==full && vim_mode == visual",
    "bindings": {
      "space /": "vim::ToggleComments"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "escape": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "ProjectSearchBar > Editor",
    "bindings": {
      "escape": "pane::CloseActiveItem"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "q": "workspace::ToggleLeftDock",
      "space b": "workspace::ToggleLeftDock",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "AgentPanel > MessageEditor > Editor",
    "bindings": {
      "escape": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "GitPanel && ChangesList",
    "bindings": {
      "c": "git::ExpandCommitEditor",
      "s": "git::ToggleStaged",
      "r": "git::RestoreFile",
      "space b": "project_panel::ToggleFocus",
      "escape": "workspace::ToggleLeftDock",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "git_panel::FocusEditor"
    }
  },
  {
    "context": "GitPanel > Editor",
    "bindings": {
      "space b": "project_panel::ToggleFocus",
      "escape": "workspace::ToggleLeftDock",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "git_panel::FocusChanges",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-w h": "workspace::ActivatePaneLeft",
      "ctrl-w l": "workspace::ActivatePaneRight",
      "ctrl-w k": "workspace::ActivatePaneUp",
      "ctrl-w j": "workspace::ActivatePaneDown",
      "escape": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "Editor && mode == full && vim_mode == insert",
    "bindings": {
      "j j": ["workspace::SendKeystrokes", "escape"]
    }
  },
  {
    "context": "Editor && mode == full && vim_mode == normal && (extension==ex || extension==exs)",
    "bindings": {
      "space t t": ["task::Spawn", { "task_tag": "#elixir-test" }],
      "space t f": ["task::Spawn", { "task_tag": "#elixir-module-test" }],
      "space t a": ["task::Spawn", { "task_name": "mix test" }],
      "space t l": "task::Rerun"
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      "ctrl-j": "editor::ContextMenuNext",
      "ctrl-k": "editor::ContextMenuPrevious"
    }
  },
  {
    "context": "Picker > Editor",
    "bindings": {
      "ctrl-j": "menu::SelectNext",
      "ctrl-k": "menu::SelectPrevious"
    }
  }
]
